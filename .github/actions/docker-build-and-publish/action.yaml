name: "Docker build and publish"
description: "A reusable action to build and tag Application's Docker image"
inputs:
  context:
    type: string
    required: false
    default: ./
  dockerfile:
    type: string
    required: false
    default: ./Dockerfile
  registry_name:
    type: string
    required: false
    default: '' # Use docker.io for Docker Hub if empty
  registry_user:
    type: string
    required: true
  registry_token:
    type: string
    required: true
  image_name:
    type: string
    required: true
  platforms:
    type: string
    required: false
    default: linux/amd64, linux/arm64

runs:
  using: "composite"
  steps:
    - name: Set up QEMU
      uses: docker/setup-qemu-action@v3
    - name: Install cosign
      if: github.event_name != 'pull_request'
      uses: sigstore/cosign-installer@v3.7.0
      with:
        cosign-release: 'v2.4.1'
    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3
    # Login against a Docker registry except on PR
    # https://github.com/docker/login-action
    - name: Log into registry ${{ inputs.registry_name }}
      if: github.event_name != 'pull_request'
      uses: docker/login-action@v3
      with:
        registry: ${{ inputs.registry_name }}
        username: ${{ inputs.registry_user }}
        password: ${{ inputs.registry_token }}
    - name: Extract Docker metadata
      id: meta
      uses: docker/metadata-action@v5.5.1
      with:
        images: ${{ inputs.image_name }}
    - name: Resolving tag name
      shell: bash
      run: |
        if [ "${{ github.ref_name }}" = "main" ]; then TAG_NAME="latest"; else TAG_NAME="${{ github.ref_name }}"; fi
        echo "TAG_NAME=${TAG_NAME}" >> $GITHUB_ENV
    - name: Build and push
      uses: docker/build-push-action@v6
      with:
        context: ${{ inputs.context }}
        file: ${{ inputs.dockerfile }}
        platforms: ${{ inputs.platforms }}
        push: ${{ github.event_name != 'pull_request' }}
        tags: |
          ${{ inputs.image_name }}:${{ env.TAG_NAME }}
          ${{ inputs.image_name }}:${{ github.sha }}
        labels: ${{ steps.meta.outputs.labels }}
